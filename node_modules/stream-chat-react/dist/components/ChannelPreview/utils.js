import React from 'react';
import ReactMarkdown from 'react-markdown';
export var renderPreviewText = function (text) { return React.createElement(ReactMarkdown, { skipHtml: true }, text); };
export var getLatestMessagePreview = function (channel, t, userLanguage) {
    var _a, _b;
    if (userLanguage === void 0) { userLanguage = 'en'; }
    var latestMessage = channel.state.latestMessages[channel.state.latestMessages.length - 1];
    var previewTextToRender = ((_a = latestMessage === null || latestMessage === void 0 ? void 0 : latestMessage.i18n) === null || _a === void 0 ? void 0 : _a["".concat(userLanguage, "_text")]) ||
        (latestMessage === null || latestMessage === void 0 ? void 0 : latestMessage.text);
    if (!latestMessage) {
        return t('Nothing yet...');
    }
    if (latestMessage.deleted_at) {
        return t('Message deleted');
    }
    if (previewTextToRender) {
        return renderPreviewText(previewTextToRender);
    }
    if (latestMessage.command) {
        return "/".concat(latestMessage.command);
    }
    if ((_b = latestMessage.attachments) === null || _b === void 0 ? void 0 : _b.length) {
        return t('üèô Attachment...');
    }
    return t('Empty message...');
};
var getChannelDisplayInfo = function (info, channel, currentUser) {
    var _a, _b;
    if ((_a = channel.data) === null || _a === void 0 ? void 0 : _a[info])
        return channel.data[info];
    var members = Object.values(channel.state.members);
    if (members.length !== 2)
        return;
    var otherMember = members.find(function (member) { var _a; return ((_a = member.user) === null || _a === void 0 ? void 0 : _a.id) !== (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id); });
    return (_b = otherMember === null || otherMember === void 0 ? void 0 : otherMember.user) === null || _b === void 0 ? void 0 : _b[info];
};
export var getDisplayTitle = function (channel, currentUser) { return getChannelDisplayInfo('name', channel, currentUser); };
export var getDisplayImage = function (channel, currentUser) { return getChannelDisplayInfo('image', channel, currentUser); };
